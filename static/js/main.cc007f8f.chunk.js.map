{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","AOS","init","useState","post","setpost","input","setinput","dataList","map","res","idx","className","src","volumeInfo","imageLinks","thumbnail","alt","title","subtitle","authors","publishedDate","averageRating","categories","pageCount","saleInfo","retailPrice","amount","action","type","placeholder","value","onChange","e","target","required","Button","variant","color","onClick","preventDefault","axios","get","then","data","items","catch","err","console","log","Swal","fire","icon","text","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SA+FeA,MAjFf,WAEEC,qBAAU,WACVC,IAAIC,SACJ,IAEA,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,oBAAS,GAAjC,6BAqBF,IAAMK,EAAWJ,EAAKK,KAAI,SAACC,EAAIC,GACzB,OACE,mCACP,qBAAKC,UAAU,wBAAwB,WAAS,eAAe,iBAAe,MAA9E,SACQ,sBAAKA,UAAU,qCAAf,UACC,qBAAKA,UAAU,eAAeC,IAAKH,EAAII,WAAWC,YAAYL,EAAII,WAAcC,WAAWC,UAAWC,IAAI,8BAC1G,sBAAKL,UAAU,YAAf,UACE,oBAAIA,UAAU,yBAAd,SAAwCF,EAAII,WAAWI,QAExD,sBAAKN,UAAU,OAAf,UACA,mBAAGA,UAAU,gBAAb,SAA8BF,EAAII,WAAWK,WAC5C,oBAAGP,UAAU,QAAb,qBAA8BF,EAAII,WAAWM,WAC7C,+CAAkBV,EAAII,WAAWO,iBAC/B,yCAAY,GAAGX,EAAII,WAAWQ,cAA9B,mBACa,GAAKZ,EAAII,WAAWS,cACjC,8BAAI,GAAGb,EAAII,WAAWU,UAAtB,oBACQd,EAAIe,SAASC,aAAahB,EAAIe,SAASC,YAAYC,OAD3D,6BAaZ,OACE,sBAAKf,UAAU,kBAAf,UAEA,oBAAIA,UAAU,cAAd,iDAEE,qBAAKA,UAAU,iBAAf,SACE,uBAAMgB,OAAO,GAAb,UACA,uBAAOC,KAAK,OAAOC,YAAY,YAAYlB,UAAU,wBACvDmB,MAAOzB,EAAO0B,SAAU,SAACC,GAAK1B,EAAS0B,EAAEC,OAAOH,QAASI,UAAQ,IAG/D,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYzB,UAAU,MAAM0B,MAAM,UAAUC,QA1DpE,SAAiBN,GACfA,EAAEO,iBACQ,IAAPlC,EAQHmC,IAAMC,IAAN,wDAA2DpC,IAC1DqC,MAAK,SAACjC,GACHL,EAAQK,EAAIkC,KAAKC,UAClBC,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAXZG,IAAKC,KAAK,CACZC,KAAM,QACNlC,MAAO,yBACPmC,KAAM,4BAoDA,2BAKJ,qBAAKzC,UAAU,MAAf,SAECJ,QC7EU8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc007f8f.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { useEffect } from 'react';\nimport AOS from 'aos';\nimport \"aos/dist/aos.css\";\nimport Swal from 'sweetalert2';\nimport Loading from './Loading';\n\nfunction App() {\n\n  useEffect(()=>{\n  AOS.init();\n},[])\n\n  const [post, setpost]=useState([]);\n  const [input, setinput] =useState(\"\");\n  const [done, setDone] = useState(false);\n\nfunction getData(e){\n  e.preventDefault();\n  if(input==\"\") {\n    Swal.fire({\n  icon: 'error',\n  title: 'Please enter book name',\n  text: 'Error while searching!',\n})\n    return;\n  }\n  axios.get(`https://www.googleapis.com/books/v1/volumes?q=${input}`)\n  .then((res)=>{\n      setpost(res.data.items);\n  }).catch((err)=>{\n    console.log(err);\n  })\n}\n\n\nconst dataList = post.map((res,idx)=>{\n      return(\n        <>\n <div className=\"col-md-4 mb-5 m-auto \" data-aos=\"zoom-in-down\" data-aos-delay=\"300\">\n         <div className=\"card rounded shadow d-block m-auto\">\n          <img className=\"card-img-top\" src={res.volumeInfo.imageLinks&&res.volumeInfo.   imageLinks.thumbnail} alt=\"error while loading image\"/>\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-center\">{res.volumeInfo.title}</h5>\n        \n           <div className=\"info\">\n           <p className=\"card-subtitle\">{res.volumeInfo.subtitle}</p>\n            <p className=\"title\">Author: {res.volumeInfo.authors}</p>\n            <p>Published on: {res.volumeInfo.publishedDate}</p>\n              <p>Rating: {\"\"+res.volumeInfo.averageRating} ||\n              Categories: {\"\"+  res.volumeInfo.categories}</p>\n              <p>{\"\"+res.volumeInfo.pageCount}-Pages ||\n              Price: {res.saleInfo.retailPrice&&res.saleInfo.retailPrice.amount} â‚¹</p>\n             </div>\n          </div>\n      </div>\n  </div>\n\n        </>\n        \n)\n      \n    })\n\n  return (\n    <div className=\"container-fluid\">\n    \n    <h1 className=\"text-center\">Search Your Books Here ðŸ“–</h1>\n\n      <div className=\"col-md-4 input\">\n        <form action=\"\">\n        <input type=\"text\" placeholder=\"Book name\" className=\"col-md-4 form-control\" \n      value={input} onChange={(e)=>{setinput(e.target.value)}} required/>\n\n\n        <Button variant=\"contained\" className=\"btn\" color=\"success\" onClick={getData}>GET DATA</Button>\n        </form>\n      </div>\n\n \n    <div className=\"row\" >\n  \n    {dataList}\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}